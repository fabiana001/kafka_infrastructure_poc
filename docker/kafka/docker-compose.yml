version: '3.5'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - kafka_network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:5.1.0
    hostname: kafka
    container_name: kafka
    networks:
      - kafka_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    container_name: kafka-topics-ui
    networks:
      - kafka_network
    ports:
      - "8001:8000"
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest-proxy:8082
      SCHEMAREGISTRY_UI_URL: http://schema-registry:8081
      PROXY: "true"
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-rest-proxy
  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.0
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - kafka_network
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
    depends_on:
      - kafka
      - zookeeper
  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.4
    hostname: kafka-schema-registry-ui
    container_name: kafka-schema-registry-ui
    networks:
      - kafka_network
    ports:
      - "8000:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
    depends_on:
      - schema-registry
  kafka-rest-proxy :
    image: confluentinc/cp-kafka-rest:5.1.0
    hostname: kafka-rest-proxy
    container_name: kafka-rest-proxy
    networks:
      - kafka_network
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: 'GET,POST,PUT,DELETE,OPTIONS'
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGN: '*'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
  control-center:
    image: confluentinc/cp-enterprise-control-center:5.1.0
    hostname: control-center
    container_name: control-center
    networks:
      - kafka_network
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-rest-proxy:8082
    depends_on:
      - kafka
      - zookeeper
      - kafka-rest-proxy
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
  connect:
    image: confluentinc/cp-kafka-connect:5.1.0
    hostname: connect
    container_name: connect
    networks:
      - kafka_network
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "docker-connect"
      CONNECT_CONFIG_STORAGE_TOPIC: "docker-connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "docker-connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "docker-connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_PLUGIN_PATH: "/usr/share/java, /etc/kafka-connect/jars"
      #CLASSPATH: /usr/share/java/kafka-connect-jdbc/mysql-connector-java-8.0.14.jar
    volumes:
      - ${PWD}/jars:/etc/kafka-connect/jars
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1", "8083"]
      start_period: 30s
networks:
  kafka_network:
    external: false
    name: kafka_network
